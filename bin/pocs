#!/usr/bin/env python3

import argparse
import os
import sys

from warnings import warn

from pocs.core import POCS


def main():
    parser = argparse.ArgumentParser(
        description='Start the PANOPTES unit.',
        epilog="Don't forget to set the $POCS environment variable."
    )
    parser.add_argument('--simulator', action="append", default=['none'],
                        help='Run the unit in simulator mode. Possible values are: all, mount, camera, weather, night')
    parser.add_argument('--state_machine_file', default='simple_state_table', help='State machine file to use')
    parser.add_argument('--targets', default='default_targets', help='State machine file to use')
    parser.add_argument('--auto-detect', action='store_true', default=True,
                        help='Attempt to auto detect the camera ports, defaults to True.')
    parser.add_argument('--messaging', action='store_true', default=True, help='Start messaging system')
    parser.add_argument('-v', '--verbose', action='store_true', default=False, help='Verbose mode')
    parser.add_argument('-d', '--debug', action='store_true', default=False, help='Debug mode')

    args = parser.parse_args()

    # Create the unit and start up.
    pocs = POCS(**vars(args))
    pocs.initialize()

    try:
        pocs.run(exit_when_done=True)
    except KeyboardInterrupt:
        warn("System interrupted. Shutting down. Please wait for park")
        pocs.park()
    finally:
        pocs.power_down()


if __name__ == '__main__':
    if not os.getenv('POCS'):
        sys.exit("Please set the POCS environment variable.")

    sys.exit(main())
