name: Test Python

on: [push, pull_request]
jobs:
  lint:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.8]
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v1
        with:
          python-version: ${{ matrix.python-version }}
      - name: Lint with flake8
        run: |
          pip install flake8
          # stop the build if there are Python syntax errors or undefined names
          flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
          # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
          flake8 . --count --exit-zero --max-complexity=10 --max-line-length=100 --statistics
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.8]
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Build panoptes-pocs image
        run: |
          # Make sure git goes to the build context.
          sed -i s'/^\.git$/\!\.git/' .dockerignore
          docker build -t panoptes-pocs:develop -f docker/develop.Dockerfile .
      - name: Test with pytest in panoptes-pocs container
        run: |
          mkdir -p coverage_dir && chmod 777 coverage_dir
          ci_env=`bash <(curl -s https://codecov.io/env)`
          docker run -i \
            $ci_env \
            -e REPORT_FILE="/tmp/coverage/coverage.xml" \
            --network "host" \
            -v $PWD/coverage_dir:/var/panoptes/logs \
            -v $PWD/coverage_dir:/tmp/coverage \
            panoptes-pocs:develop \
            scripts/testing/run-tests.sh
      - name: Upload coverage report to codecov.io
        uses: codecov/codecov-action@v1
        if: success()
        with:
          name: codecov-upload
          file: coverage_dir/coverage.xml
          fail_ci_if_error: true
      - name: Create log file artifact
        uses: actions/upload-artifact@v1
        if: always()
        with:
          name: log-files
          path: coverage_dir/panoptes-testing.log
