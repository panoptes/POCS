name: Test Python

on: [ push, pull_request ]
jobs:
  lint:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [ 3.8 ]
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v1
        with:
          python-version: ${{ matrix.python-version }}
      - name: Lint with flake8
        run: |
          pip install flake8
          # stop the build if there are Python syntax errors or undefined names
          flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
          # exit-zero treats all errors as warnings.
          flake8 . --count --exit-zero --max-complexity=10 --max-line-length=100 --statistics
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [ 3.8 ]
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Build panoptes-pocs image
        run: |
          docker-compose -f tests/docker-compose.yaml build
          mkdir -p logs && chmod -R 777 logs
          mkdir -p build && chmod -R 777 build
      - name: Test with pytest in panoptes-pocs container
        run: |
          docker-compose -f tests/docker-compose.yaml up
      - name: Upload coverage report to codecov.io
        uses: codecov/codecov-action@v1
        if: success()
        with:
          name: codecov-upload
          file: build/coverage.xml
          fail_ci_if_error: true
      - name: Create log file artifact
        uses: actions/upload-artifact@v1
        if: always()
        with:
          name: log-files
          path: logs/panoptes-testing.log
