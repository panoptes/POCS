name: Test Python

on: [push, pull_request]
jobs:
  lint:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.7]
    steps:
    - name: Checkout code
      uses: actions/checkout@v2
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v1
      with:
        python-version: ${{ matrix.python-version }}
    - name: Lint with flake8
      run: |
        pip install flake8
        # stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=100 --statistics
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.7]
    steps:
    - name: Checkout code
      uses: actions/checkout@v2
    - name: Pull pocs image
      run: |
        docker pull gcr.io/panoptes-exp/pocs:latest
    - name: Test with pytest in pocs container
      timeout-minutes: 60
      run: |
        docker run -i \
          -e LOCAL_USER_ID=$(id -u) \
          -v $(pwd):/var/panoptes/POCS \
          -v $(pwd):/var/panoptes/logs \
          gcr.io/panoptes-exp/pocs:latest \
          scripts/testing/run-tests.sh
    - name: Upload coverage report to codecov.io
      uses: codecov/codecov-action@v1
      if: success()
      with:
        file: ./.coverage
        fail_ci_if_error: true
    - name: Create log file artifact
      uses: actions/upload-artifact@v1
      if: always()
      with:
        name: log-files
        path: panoptes.log
