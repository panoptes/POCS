name: Test Python

on: [push, pull_request]
jobs:
  lint:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.7]
    steps:
    - uses: actions/checkout@v2
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v1
      with:
        python-version: ${{ matrix.python-version }}
    - name: Lint with flake8
      run: |
        pip install flake8
        # stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=100 --statistics
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.7]
    steps:
    - uses: actions/checkout@v2
    - name: Pull pocs image
      run: |
        docker pull gcr.io/panoptes-exp/pocs:latest
    - run: mkdir logs
    - name: Test with pytest in pocs container
      timeout-minutes: 60
      run: |
        ci_env=`bash <(curl -s https://codecov.io/env)`
        docker run -i \
          $ci_env \
          -e LOCAL_USER_ID=$(id -u) \
          -e TRAVIS=true \
          -v $(pwd):/var/panoptes/POCS \
          -v logs:/var/panoptes/logs \
          gcr.io/panoptes-exp/pocs:latest \
          scripts/testing/run-tests.sh
    - if: failure()
      run: /
        ls -lhrst logs/
    # - uses: actions/upload-artifact@v1
    #   if: failure()
    #   with:
    #     name: log-files
    #     path: logs/panoptes.log
    - name: Upload coverage
      run: /
        coverage combine
        bash <(curl -s https://codecov.io/bash)
